name: Manual PR Creation (develop ‚Üí main)

on:
  workflow_dispatch:
    inputs:
      force_create:
        description: 'For√ßar cria√ß√£o mesmo se PR j√° existir'
        required: false
        default: false
        type: boolean
      pr_title:
        description: 'T√≠tulo customizado para o PR'
        required: false
        default: 'üîÑ Manual merge: develop ‚Üí main'
        type: string
      close_existing:
        description: 'Fechar PR existente antes de criar novo'
        required: false
        default: false
        type: boolean

jobs:
  manual-create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check existing PRs
        id: check-existing
        run: |
          existing_prs=$(gh pr list --base main --head develop --state open --json number,title --jq '.[].number')
          if [ -n "$existing_prs" ]; then
            echo "existing_prs=$existing_prs" >> $GITHUB_OUTPUT
            echo "has_existing=true" >> $GITHUB_OUTPUT
          else
            echo "has_existing=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close existing PRs
        if: steps.check-existing.outputs.has_existing == 'true' && inputs.close_existing == true
        run: |
          for pr_number in ${{ steps.check-existing.outputs.existing_prs }}; do
            gh pr close $pr_number --comment "Fechado automaticamente para criar novo PR manual"
            echo "‚úÖ PR #$pr_number fechado"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new PR
        if: steps.check-existing.outputs.has_existing == 'false' || inputs.force_create == true || inputs.close_existing == true
        run: |
          commit_count=$(git rev-list --count main..develop)

          if [ $commit_count -eq 0 ]; then
            echo "‚ùå N√£o h√° commits para merge. develop est√° atualizado com main."
            exit 1
          fi

          last_commit_msg=$(git log -1 --pretty=format:"%s" develop)
          triggered_by="${{ github.actor }}"

          pr_body="## üöÄ Manual Pull Request from develop to main

          Esta solicita√ß√£o de pull foi criada manualmente por **@$triggered_by**.

          ### üìä Resumo das altera√ß√µes:
          - **Commits √† frente de main:** $commit_count
          - **√öltimo commit:** $last_commit_msg
          - **Criado em:** $(date)
          - **Criado por:** @$triggered_by

          ### üìù √öltimos commits:
          $(git log main..develop --oneline --max-count=15)

          ### ‚úÖ Checklist de revis√£o:
          - [ ] C√≥digo revisado e aprovado
          - [ ] Testes executados e passando
          - [ ] Documenta√ß√£o atualizada se necess√°rio
          - [ ] Breaking changes documentados
          - [ ] Ready para produ√ß√£o

          ### üîç Arquivos alterados:
          $(git diff --name-only main..develop | head -20)

          ---
          *PR criado manualmente via GitHub Action*"

          gh pr create \
            --base main \
            --head develop \
            --title "${{ inputs.pr_title }}" \
            --body "$pr_body" \
            --label "manual,merge-candidate" \
            --assignee "${{ github.actor }}"

          echo "‚úÖ Novo PR criado com sucesso!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip creation
        if: steps.check-existing.outputs.has_existing == 'true' && inputs.force_create == false && inputs.close_existing == false
        run: |
          echo "‚ö†Ô∏è J√° existe um PR de develop para main:"
          gh pr list --base main --head develop --state open
          echo ""
          echo "üí° Para criar um novo PR:"
          echo "  - Marque 'force_create' como true, ou"
          echo "  - Marque 'close_existing' como true para fechar o existente"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
